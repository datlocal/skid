local function removeObjects()
    local map = workspace:FindFirstChild("_map")
    if not map then
        print("_map not found.")
        return
    end

    -- Iterate through all children of _map
    for _, child in ipairs(map:GetChildren()) do
        -- Remove "snow"
        if child:FindFirstChild("snow") then
            child.snow:Destroy()
            print("Removed snow object.")
        end

        -- Remove specific named objects
        if child.Name == "E" or child.Name == "T" or child.Name == "Corner" or child.Name == "Line" then
            child:Destroy()
            print("Deleted object:", child.Name)
        end

        -- Check inside models for "Model" and "side"
        if child:IsA("Model") then
            for _, grandChild in ipairs(child:GetChildren()) do
                if grandChild.Name == "Model" or grandChild.Name == "side" then
                    grandChild:Destroy()
                    print("Deleted grandChild:", grandChild.Name)
                end
            end
        end
    end

    -- Handle "player" and its children
    local player = map:FindFirstChild("player")
    if player then
        -- Remove "Beacon"
        local beacon = player:FindFirstChild("Beacon")
        if beacon then
            beacon:Destroy()
            print("Deleted Beacon under player.")
        end

        -- Modify and clean up "area"
        local area = player:FindFirstChild("area")
        if area then
            area.BrickColor = BrickColor.new("Lime green")
            area.Color = Color3.fromRGB(0, 255, 0)
            area.Size = Vector3.new(0.3, 15, 15)
            area.Shape = Enum.PartType.Block
            print("Modified area.")

            local attachment = area:FindFirstChild("Attachment")
            if attachment then
                attachment:Destroy()
                print("Deleted Attachment from area.")
            end
        end
    end
end

removeObjects()

-- Cleanup lane
local function cleanLaneIndicators()
    local parent = workspace:FindFirstChild("_lane_indicators")
    if not parent then
        print("_lane_indicators not found.")
        return
    end

    -- Iterate through children of _lane_indicators
    for _, child in ipairs(parent:GetChildren()) do
        -- Remove "Beacon"
        local beacon = child:FindFirstChild("Beacon")
        if beacon then
            beacon:Destroy()
            print("Beacon deleted from:", child.Name)
        else
            print("Beacon not found in:", child.Name)
        end

        -- Remove "area"
        local area = child:FindFirstChild("area")
        if area then
            area:Destroy()
            print("Area deleted from:", child.Name)
        else
            print("Area not found in:", child.Name)
        end
    end
end

cleanLaneIndicators()
