if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- Configuration
getgenv().join = false --true/false
getgenv().card = true --true/false
getgenv().boostfps = true --true/false
getgenv().FocusWave = 20 -- Priority limit wave
getgenv().PriorityCards = {
    "+ Attack I", 
    "+ Attack II", 
    "+ Attack III", 
    "+ Gain 2 Random Effects Tier 1",
    "+ Gain 2 Random Effects Tier 2",
    "+ Gain 2 Random Effects Tier 3",
    "+ Range I", 
    "+ Range II",
    "+ Range III",
    "- Cooldown I", 
    "- Cooldown II",
    "- Cooldown III"
}
getgenv().Cards = {
    "+ Explosive Deaths I", 
    "+ Explosive Deaths II", 
    "+ Explosive Deaths III",
    "+ Gain 2 Random Curses Tier 1", 
    "+ Gain 2 Random Curses Tier 2", 
    "+ Gain 2 Random Curses Tier 3",
    "+ Enemy Speed I", 
    "+ Enemy Speed II", 
    "+ Enemy Speed III",
    "+ Enemy Regen I", 
    "+ Enemy Regen II", 
    "+ Enemy Regen III",
    "+ Yen I", 
    "+ Yen II", 
    "+ Yen III",
    "+ Boss Damage I", 
    "+ Boss Damage II", 
    "+ Boss Damage III",
    "+ Range I", 
    "+ Range II",
    "+ Range III",
    "- Cooldown I", 
    "- Cooldown II",
    "- Cooldown III",
    "+ Attack I", 
    "+ Attack II",
    "+ Attack III",  
    "+ Gain 2 Random Effects Tier 1",
    "+ Gain 2 Random Effects Tier 2",
    "+ Gain 2 Random Effects Tier 3",
    "+ New Path"
}

--------------------------------------------------------------------------------------------
-- Functions
local function FPS()
    local success, err = pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Ngducok/doing-some-shit/refs/heads/main/fpsobf.lua"))()
    end)
    if success then
        print("FPS Boost Loaded")
    else
        print("Failed to load FPS Boost:", err)
    end
end

local function joinMatchmaking()
    local args = {
        [1] = "christmas_event"
    }
    local success, err = pcall(function()
        game:GetService("ReplicatedStorage").endpoints.client_to_server.request_matchmaking:InvokeServer(unpack(args))
    end)
    if success then
        print("Matchmaking executed")
    else
        print("Failed to execute matchmaking:", err)
    end
end

local function autoCardLoader()
    local success, err = pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Ngducok/doing-some-shit/refs/heads/main/atpcobf.lua"))()
    end)
    if success then
        print("Auto Card Loaded")
    else
        print("Failed to load Auto Card:", err)
    end
end

local function cleanUpMap()
    -- Remove snow objects
    for _, child in ipairs(workspace._map:GetChildren()) do
        if child:FindFirstChild("snow") then
            child.snow:Destroy()
            print("Removed snow from:", child.Name)
        end
    end

    -- Remove Beacon
    if workspace._map.player:FindFirstChild("Beacon") then
        workspace._map.player.Beacon:Destroy()
        print("Beacon destroyed")
    end

    -- Modify area part
    local area = workspace._map.player:FindFirstChild("area")
    if area then
        print("Modifying area part...")
        area.BrickColor = BrickColor.new("Lime green")
        area.Color = Color3.fromRGB(0, 255, 0)
        area.Size = Vector3.new(0.3, 15, 15)
        area.Shape = Enum.PartType.Block

        local attachment = area:FindFirstChild("Attachment")
        if attachment then
            attachment:Destroy()
            print("Attachment removed from area")
        end
    end
end

--------------------------------------------------------------------------------------------
-- Execution
if getgenv().join then
    joinMatchmaking()
    wait()
end

if getgenv().card then
    autoCardLoader()
    wait()
end

if getgenv().boostfps then
    FPS()
    wait()
end

-- Clean up map modifications
cleanUpMap()

-- Additional script execution
wait(1)
script_key = "YjSVgRRTkNtpZdaNGzSqnXUwDZNECNej";
loadstring(game:HttpGet("https://raw.githubusercontent.com/buang5516/buanghub/main/PremiumBuangHub.lua"))()
